{"version":3,"sources":["components/ErrorAlert.js","components/Login.js","components/SignUpForm.js","components/Signup.js","components/TopNav.js","components/Loading.js","components/Message.js","helpers.js","components/Chatterbox.js","components/App.js","index.js"],"names":["ErrorMessage","props","errorMessage","error","react_default","a","createElement","className","ErrorContainer","children","Login","state","loginCredentials","email","password","errorBin","failedLogin","handleChange","e","_e$target","target","name","value","Object","objectSpread","_this","setState","handleSubmit","_callee","_this$state$loginCred","res","regenerator_default","wrap","_context","prev","next","preventDefault","axios","post","sent","console","log","data","errors","forEach","param","msg","form","history","push","redirectUrl","stop","this","_this2","_this$state","errorMessages","entries","filter","map","i","ErrorAlert_ErrorMessage","key","alertWithErrors","ErrorAlert","action","method","onSubmit","ref","htmlFor","type","placeholder","onChange","Link","to","React","Component","SignUpForm","id","Signup","user","username","firstName","lastName","confirmPassword","successfulSubmission","viewportIsWide","setViewportStatus","window","innerWidth","clearErrorBin","fieldsToReset","errorArray","_errorArray","slicedToArray","length","addEventListener","removeEventListener","concat","toUpperCase","substring","toLowerCase","style","textDecoration","color","borderBottom","components_SignUpForm","TopNav","logout","margin","onClick","Loading","Update","chat","classStatus","Message","timestamp","time","getTimestamp","date","Date","toLocaleDateString","toLocaleTimeString","split","slice","Chatterbox","_id","dateCreated","chatHistory","userIsTyping","onlineUsers","socket","emit","get","location","href","handleKeyDown","currentTarget","parentNode","keyCode","shiftKey","dispatchEvent","Event","handleKeyUp","_callee2","_context2","message","trim","io","on","toConsumableArray","conversationBin","document","querySelector","scrollTop","scrollHeight","_this3","showOnlineUsers","onlineUser","renderConversation","includes","components_Message","Message_Update","Fragment","components_TopNav","role","aria-label","div","onKeyDown","onKeyUp","components_Loading","App","Switch","Route","exact","path","component","render","BrowserRouter","components_App","getElementById"],"mappings":"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","file":"static/js/main.4528275a.chunk.js","sourcesContent":["import React from 'react';\nimport \"../styles/Errors.css\"\n\nconst ErrorContainer = (props) => (\n  <div className=\"error-container\">\n    <h3 className=\"error-container__title\">\n      Uh oh, it looks like you missed a thing or two!\n    </h3>\n    <ul className=\"error-container__errors-list\">\n      {props.children}\n    </ul>\n  </div>\n);\n\nexport const ErrorMessage = (props) => {\n  const errorMessage = props.error[1];\n  return (\n    <li className=\"error-container__error-message\">\n      {errorMessage}\n    </li>\n  )\n};\n\nexport default ErrorContainer;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ErrorContainer, { ErrorMessage } from \"./ErrorAlert\";\nimport axios from \"axios\";\nimport \"../styles/Login.css\";\n\nclass Login extends React.Component {\n  state = {\n    loginCredentials: {\n      email: null,\n      password: null\n    },\n    errorBin: {\n      email: null,\n      password: null\n    },\n    failedLogin: false\n  }\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    const loginCredentials = { ...this.state.loginCredentials };\n    loginCredentials[name] = value;\n    this.setState({ loginCredentials });\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    const { email, password } = this.state.loginCredentials;\n    const res = await axios.post(\"/api/login\", { email, password });\n    let errorBin = {...this.state.errorBin};\n\n    console.log(res);\n    if(res.data.errors) {\n      errorBin.email = null;\n      errorBin.password = null;\n      res.data.errors.forEach(error => {\n        errorBin[error.param] = error.msg;\n      });\n      this.setState({ failedLogin: true });\n      this.setState({ errorBin });\n      // reset password input & password state\n      this.form.password.value = null;\n      this.setState({ loginCredentials: { email, password: null } });\n    } else {\n      // redirect to user's chatterbox\n      this.props.history.push(res.data.redirectUrl);\n    }\n  }\n\n  render() {\n    const { errorBin, failedLogin } = this.state;\n    const errorMessages = Object.entries(errorBin)\n      .filter(error => error[1])\n      .map((error, i) => <ErrorMessage key={i} error={error}/>);\n    const alertWithErrors = failedLogin\n      ? <ErrorContainer>\n          {errorMessages}\n        </ErrorContainer>\n      : null\n\n  return (\n    <div className=\"login\">\n        <div className=\"login__outline\">\n          <header className=\"login__header\">\n            <h1 className=\"login__h1\">Chatterbox</h1>\n            <h2 className=\"login__h3\">A place for chatting</h2>\n          </header>\n          {failedLogin\n          ? alertWithErrors\n          : null\n          }\n          <form\n          action=\"/login\"\n          method=\"POST\"\n          className=\"login__form\"\n          onSubmit={this.handleSubmit}\n          ref={form => this.form = form}\n          >\n            <fieldset>\n              <label htmlFor=\"email\">\n                Email\n              </label>\n              <input\n              type=\"text\"\n              name=\"email\"\n              placeholder=\"matthew@chatterbox.com\"\n              onChange={this.handleChange}\n              />\n              <label htmlFor=\"password\">\n                Password\n              </label>\n              <input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"iCh@tt3rb0x!\"\n              onChange={this.handleChange}\n              />\n              <input\n              type=\"submit\"\n              className=\"login__btn\"\n              value=\"Log In\"\n              />\n            </fieldset>\n          </form>\n          <Link\n          to=\"/sign-up\"\n          className=\"login__register-link\"\n          >\n            Sign up for an account\n          </Link>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Login;","import React from \"react\";\nimport \"../styles/Signup.css\";\n\nconst SignUpForm = (props) => (\n  <form\n  action=\"/sign-up\"\n  method=\"POST\"\n  className=\"sign-up__form\"\n  onSubmit={props.handleSubmit}\n  >\n    <label htmlFor=\"username\">\n      Username\n    </label>\n    <input\n    type=\"text\"\n    id=\"username\"\n    name=\"username\"\n    onChange={props.handleChange}\n    />\n    <label htmlFor=\"first-name\">\n      First name\n    </label>\n    <input\n    type=\"text\"\n    id=\"first-name\"\n    name=\"firstName\"\n    onChange={props.handleChange}\n    />\n    <label htmlFor=\"last-name\">\n      Last name\n    </label>\n    <input\n    type=\"text\"\n    id=\"last-name\"\n    name=\"lastName\"\n    onChange={props.handleChange}\n    />\n    <label htmlFor=\"email\">\n      Email\n    </label>\n    <input\n    type=\"text\"\n    id=\"email\"\n    name=\"email\"\n    onChange={props.handleChange}\n    />\n    <label htmlFor=\"password\">\n      Password\n    </label>\n    <input\n    type=\"password\"\n    id=\"password\"\n    name=\"password\"\n    onChange={props.handleChange}\n    />\n    <label htmlFor=\"confirm-password\">\n      Confirm password\n    </label>\n    <input\n    type=\"password\"\n    id=\"confirm-password\"\n    name=\"confirmPassword\"\n    onChange={props.handleChange}\n    />\n    <input\n    type=\"submit\"\n    value=\"Sign up\"\n    />\n  </form>\n);\n\nexport default SignUpForm;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport SignUpForm from \"./SignUpForm\";\nimport ErrorContainer, { ErrorMessage } from \"./ErrorAlert\";\n\nclass Signup extends Component {\n  state = {\n    user: {\n      username: null,\n      firstName: null,\n      lastName: null,\n      email: null,\n      password: null,\n      confirmPassword: null\n    },\n    errorBin: {\n      username: null,\n      firstName: null,\n      lastName: null,\n      email: null,\n      password: null,\n      confirmPassword: null\n    },\n    successfulSubmission: null,\n    viewportIsWide: null,\n  }\n\n  componentDidMount() {\n    this.setViewportStatus();\n  }\n\n  componentDidUpdate() {\n    window.addEventListener('resize', this.setViewportStatus);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.setViewportStatus);\n  }\n\n  setViewportStatus = () => {\n    window.innerWidth < 950\n    ? this.setState({ viewportIsWide: false })\n    : this.setState({ viewportIsWide: true });\n  }\n\n  clearErrorBin = (errorBin) => {\n    const fieldsToReset = Object.entries(errorBin)\n      .map((errorArray) => {\n        const [ key, errorMsg ] = errorArray;\n        return errorMsg ? key : null;\n      })\n      .filter(key => key);\n\n    if(fieldsToReset.length) {\n      fieldsToReset.forEach(key => errorBin[key] = null);\n    }\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault()\n    const res = await axios.post('/api/sign-up', this.state.user);\n    let errorBin = { ...this.state.errorBin };\n    console.log(res);\n\n    if(res.data.errors) {\n      // clear previous errors, if there were any\n      this.clearErrorBin(errorBin);\n      // then repopulate new ones\n      res.data.errors.forEach(error => {\n        errorBin[error.param] = error.msg;\n      });\n      this.setState({ errorBin });\n      this.setState({ successfulSubmission: false });\n    } else {\n      // clear previous errors, if there were any\n      this.clearErrorBin(errorBin);\n      this.setState({ errorBin });\n      // display success message to user\n      console.log(res.data);\n      this.setState({ successfulSubmission: true });\n    }\n  }\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    const user = { ...this.state.user };\n    user[name] = value;\n    this.setState({ user });\n  }\n\n  render() {\n    const { errorBin, successfulSubmission, viewportIsWide, user } = this.state;\n\n    const errorMessages = Object.entries(errorBin)\n      .filter(error => error[1])\n      .map((error, i) => <ErrorMessage key={i} error={error}/>);\n\n    const alertWithErrors = successfulSubmission === false\n      ? <ErrorContainer>\n          {errorMessages}\n        </ErrorContainer>\n      : null\n\n    const formatName = (name) => {\n      return name[0].toUpperCase() + name.substring(1).toLowerCase();\n    }\n\n    return (\n      <div className=\"sign-up\">\n        <div className=\"sign-up__outline\">\n          <header className=\"sign-up__header\">\n            <h1 className=\"sign-up__h1\">\n              {successfulSubmission\n                ? `Welcome, ${formatName(user.firstName)}!`\n                : \"Chatterbox\"\n              }\n            </h1>\n            <h2 className=\"sign-up__h2\">\n              {successfulSubmission\n                ? \"🎉 You're an official Chatterboxer! 🎉\"\n                : \"Welcome to your new social life\"\n              }\n            </h2>\n          </header>\n          {!viewportIsWide ? alertWithErrors : null}\n          {successfulSubmission\n          ? <Link\n            className=\"success-message__login-link\"\n            style={{\n              textDecoration: \"none\",\n              color: \"cadetblue\",\n              borderBottom: \"1px dashed green\"\n            }}\n            to=\"/\"\n            >\n              You can continue to login here\n            </Link>\n          : <SignUpForm\n            handleChange={this.handleChange}\n            handleSubmit={this.handleSubmit}\n            />\n          }\n        </div>\n        {viewportIsWide ? alertWithErrors : null}\n      </div>\n    )\n  }\n}\n\nexport default Signup;\n","import React from \"react\";\n\nconst TopNav = (props) => {\n  const { user, logout } = props;\n  return (\n    <ul className=\"top-nav\">\n      <li>\n        <h2 style={{ margin: \"0\" }}>\n          {`# ${user.username}`}\n        </h2>\n      </li>\n      <li\n      className=\"top-nav__menu\"\n      onClick={logout}\n      >\n        Logout\n      </li>\n    </ul>\n)};\n\nexport default TopNav;","import React from \"react\";\n\nconst Loading = (props) => (\n  <p>Loading your Chatterbox!</p>\n);\n\nexport default Loading;","import React from \"react\";\n\nconst Message = (props) => {\n  const { chat, classStatus } = props;\n  return (\n    <li className={classStatus}>\n      <div className={\"chatterbox__user-info\"}>\n        <p className={\"chatterbox__username\"}>\n          {chat.user.username}\n        </p>\n        <p>{chat.timestamp.time}</p>\n      </div>\n      <span>\n        {chat.msg}\n      </span>\n    </li>\n  )\n};\n\nexport const Update = (props) => {\n  const { chat, classStatus } = props;\n  return (\n    <li className={classStatus}>{chat.msg}</li>\n  )\n}\n\nexport default Message;\n","const getTimestamp = () => {\n  const date = new Date().toLocaleDateString();\n  let time = new Date().toLocaleTimeString();\n  time = time.split(' ');\n\n  if (time[0].length > 7) {\n    time = time[0]\n      .slice(0, 5)\n      .concat(' ')\n      .concat(time[1]);\n  } else {\n    time = time[0]\n      .slice(0, 4)\n      .concat(' ')\n      .concat(time[1]);\n  }\n\n  return { date, time };\n}\n\nexport default getTimestamp;","import React, { Component } from 'react';\nimport axios from \"axios\";\nimport io from \"socket.io-client\";\nimport TopNav from \"./TopNav\";\nimport Loading from \"./Loading\";\nimport Message, { Update } from \"./Message\";\nimport '../styles/chatterbox.css';\nimport getTimestamp from '../helpers';\n\nclass Chatterbox extends Component {\n  state = {\n    user: {\n      _id: null,\n      firstName: null,\n      lastName: null,\n      username: null,\n      email: null,\n      dateCreated: null\n    },\n    chatHistory: [],\n    userIsTyping: null,\n    onlineUsers: []\n  }\n\n  async componentDidMount() {\n    this.socket = io();\n    const res = await axios.get('/api/user');\n    if(res.data) {\n      this.setState({ user: res.data });\n    } else {\n      window.location.href = \"/\";\n    }\n\n    // Config for notifying users when a new user logs in\n    this.socket.emit(\"login\", this.state.user.username, this.socket.id);\n    this.socket.on(\"login\", (username) => {\n      const chatHistory = [...this.state.chatHistory];\n      const timestamp  = getTimestamp();\n      chatHistory.push({\n        user: { _id: \"admin\", username: \"admin\" },\n        msg: `<--- ${username} logged in at ${timestamp.time} --->`,\n        timestamp\n      });\n      this.setState({ chatHistory });\n    });\n\n    // Config for notifying users when a user logs out\n    this.socket.on(\"logout\", (username) => {\n      const chatHistory = [...this.state.chatHistory];\n      const timestamp  = getTimestamp();\n      chatHistory.push({\n        user: { _id: \"admin\", username },\n        msg: `<--- ${username} logged out at ${timestamp.time} --->`,\n        timestamp\n      });\n      this.setState({ chatHistory });\n    });\n\n    // Updates \"online users\" bin\n    this.socket.on(\"online\", (onlineUsers) => {\n      console.log(onlineUsers);\n      this.setState({ onlineUsers });\n    });\n\n    // Listens for incoming messages and posts it to chat history\n    this.socket.on(\"message\", (user, msg, timestamp) => {\n      const chatHistory = [...this.state.chatHistory];\n      chatHistory.push({ user, msg, timestamp });\n      this.setState({ chatHistory });\n      this.setState({ userIsTyping: null });\n    });\n\n    // Listens for typing activity and broadcast `${user} is typing`\n    this.socket.on(\"typing\", (user, value) => {\n      console.log(user, value);\n      if(value) {\n        const userIsTyping = `${user.username} is typing...`;\n        this.setState({ userIsTyping });\n      } else {\n        this.setState({ userIsTyping: null });\n      }\n    });\n  }\n\n  componentDidUpdate() {\n    // auto scroll to the bottom of the conversation bin when a new message is received or sent\n    const conversationBin = document.querySelector(\".chatterbox__conversation-bin\");\n    conversationBin.scrollTop = conversationBin.scrollHeight;\n  }\n\n  logout = async () => {\n    this.socket.emit(\"disconnect\", this.state.user.username, this.socket.id);\n\n    const res = await axios.get(\"/api/logout\");\n    if(res.data) window.location.href = \"/\";\n  }\n\n  // If user hits \"enter\" key, form is submitted. If user hits enter with the \"shift\" key pressed, a new line is return\n  handleKeyDown = (e) => {\n    const form = e.currentTarget.parentNode;\n    if(e.keyCode === 13 && !e.shiftKey) {\n      e.preventDefault();\n      form.dispatchEvent(new Event(\"submit\"));\n    }\n  }\n\n  // Sends user info to server to broadcast` ${user} is typing`\n  handleKeyUp = (e) => {\n    const { user } = this.state;\n    const { value } = e.currentTarget;\n    this.socket.emit(\"typing\", user, value);\n  }\n\n  // Sends message to connected users\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    const { value } = this.form.message;\n    const { user } = this.state;\n    const timestamp = getTimestamp();\n\n    if(value.trim().length) {\n      this.socket.emit('message', user, value, timestamp);\n      this.form.message.value = '';\n    }\n  }\n\n  render() {\n    const {\n      user,\n      chatHistory,\n      userIsTyping,\n      onlineUsers\n    } = this.state;\n\n    const showOnlineUsers = onlineUsers\n      .filter(onlineUser => onlineUser !== user.username)\n      .map((user, i) => <li key={i}>{user}</li>);\n\n    const renderConversation = chatHistory.map((chat, i) => {\n      const classStatus = chat.user._id === user._id\n      ? \"chatterbox__message chatterbox__message-sent\"\n      : chat.user._id === \"admin\"\n      ? \"chatterbox__group-update\"\n      : \"chatterbox__message chatterbox__message-received\";\n\n      return (\n        classStatus.includes(\"chatterbox__message\")\n        ? <Message\n          key={i}\n          chat={chat}\n          classStatus={classStatus}\n          />\n        : <Update\n          key={i}\n          chat={chat}\n          classStatus={classStatus}\n          />\n      );\n    });\n\n    return (\n      <div className=\"chatterbox\">\n        {user.username\n        ? <>\n            <header>\n              <TopNav\n                user={user}\n                logout={this.logout}\n                />\n            </header>\n            <main>\n              <div\n              className=\"chatterbox__inventory\"\n              >\n                <ul className=\"chatterbox__online-users\">\n                  <li>Online users</li>\n                  {showOnlineUsers.length\n                  ? showOnlineUsers\n                  : <li id=\"no-users-online\">\n                      <span>\n                        No other users are online! Feel free to <span role=\"img\" aria-label=\"monkey emoji\">🐒</span> around, no one's watching! <span role=\"img\" aria-label=\"winky face emoji\">😉</span>\n                      </span>\n                    </li>\n                  }\n                </ul>\n              </div>\n              <div\n              className=\"chatterbox__messaging-container\"\n              >\n                <ul\n                className=\"chatterbox__conversation-bin\"\n                ref={div => this.conversationBin = div}\n                >\n                  {renderConversation}\n                  <li className=\"chatterbox__user-is-typing\">\n                    {userIsTyping}\n                  </li>\n                </ul>\n                <form\n                className=\"chatterbox__form\"\n                action=\"/message\"\n                method=\"POST\"\n                onSubmit={this.handleSubmit}\n                ref={form => this.form = form}\n                >\n                  <textarea\n                  name=\"message\"\n                  className=\"chatterbox__type-message\"\n                  placeholder=\"Type anything...\"\n                  onKeyDown={this.handleKeyDown}\n                  onKeyUp={this.handleKeyUp}\n                  />\n                </form>\n              </div>\n            </main>\n          </>\n        : <Loading />\n        }\n      </div>\n    )\n  }\n}\n\nexport default Chatterbox;\n","import React from 'react';\nimport { Switch, Route } from \"react-router-dom\";\nimport Login from \"./Login\";\nimport Signup from \"./Signup\";\nimport Chatterbox from \"./Chatterbox\";\n\nconst App = (props) => (\n    <Switch>\n      <Route exact path=\"/\" component={ Login } />\n      <Route exact path=\"/sign-up\" component={ Signup } />\n      <Route exact path=\"/chatterbox\" component={ Chatterbox } />\n    </Switch>\n);\n\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./styles/styles.css\"\nimport App from \"./components/App\";\n\nrender((\n<BrowserRouter>\n  <App />\n</BrowserRouter>\n),\ndocument.getElementById('root'));\n\n"],"sourceRoot":""}